{"version":3,"sources":["Components/ui/NavBar.js","selectors/getPlanetsByMovie.js","Components/movieScreens/MovieItem.js","Components/movieScreens/MovieList.js","Components/movieScreens/NewHopeScreen.js","Components/movieScreens/EmpireStrikesScreen.js","Components/movieScreens/ReturnJediScreen.js","selectors/getPlanetByName.js","Components/movieScreens/PlanetScreen.js","Components/movieScreens/PhantomMenaceScreen.js","Components/movieScreens/AttackClonesScreen.js","Components/movieScreens/RevengeSith.js","Components/movieScreens/PlanetSearch.js","hooks/useForm.js","routers/DashboardRouter.js","routers/AppRouter.js","SWApp.js","index.js"],"names":["Navbar","className","to","publico","src","width","alt","loading","activeClassName","exact","getPlanetsByMovie","movieNum","a","planets","fetch","resp","json","movie","planetURL","planet","push","MovieItem","style","maxWidth","name","replace","onError","e","target","onerror","climate","diameter","MovieList","idMovie","useState","setPlanets","useEffect","getPlanets","map","key","role","NewHopeScreen","marginLeft","EmpireStrikesScreen","ReturnJediScreen","getPlanetByName","next","respNext","planetNext","results","PlanetScreen","history","planetName","useParams","setPlanet","console","log","getPlanet","gravity","orbital_period","population","rotation_period","surface_water","terrain","onClick","length","goBack","PhantomMenaceScreen","AttackClonesScreen","RevengeSith","PlanetSearch","location","useLocation","queryString","parse","search","q","initialState","values","setValues","reset","handleInputChange","value","useForm","textoBusqueda","onSubmit","preventDefault","type","placeholder","onChange","autoComplete","elemento","DashboardRouter","path","component","AppRouter","process","SWApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.268d873f.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, NavLink} from 'react-router-dom'\n\nexport const Navbar = () => {\n    const publico = process.env.PUBLIC_URL;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <Link className=\"navbar-brand\" to={publico + \"/\"}>\n            <img src=\"/assets/planets/SWLogo.png\" width=\"50\"  alt=\"\" loading=\"lazy\"/>\n            </Link>\n\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to={publico + \"/movie1\"}\n                    >\n                        Episode IV\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to={publico + \"/movie2\"}\n                    >\n                        Episode V\n                    </NavLink>\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to={publico + \"/movie3\"}\n                    >\n                        Episode VI\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to={publico + \"/movie4\"}\n                    >\n                        Episode I\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to={publico + \"/movie5\"}\n                    >\n                        Episode II\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to={publico + \"/movie6\"}\n                    >\n                        Episode III\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to={publico + \"/search\"}\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n        </nav>\n    )\n}","\nexport const getPlanetsByMovie = async(movieNum) => {\n    const planets=[]; \n    const resp = await fetch(`https://swapi.dev/api/films/${movieNum}/`);\n    const movie = await resp.json();\n    for(const planetURL of movie.planets){\n        const resp = await fetch(planetURL);\n        const planet = await resp.json();\n        planets.push(planet);\n    }\n    return planets;\n}\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const MovieItem = ({planet}) => {\n    return (\n        <div className=\"card mb-3 carta\" style={{maxWidth: 400}}>\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n          <img src={`../../assets/planets/${(planet.name).replace(/ /g,\"-\")}.png`} onError={(e)=>{e.target.onerror = null; e.target.src=\"/assets/planets/planetx.png\"}} className=\"card-img-top animate__animated animate__flipInY\" alt={planet.name}/>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n    <       h5 className=\"card-title\">{(planet.name).replace(/ /g,\"-\")}</h5>\n          <p className=\"card-text\"> <strong>Climate: </strong>{planet.climate}</p>\n          <p className=\"card-text\"> <strong>Diameter: </strong>{planet.diameter}</p>\n          <Link to={`planet/${planet.name}`}>More...</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n        \n    )\n}\n","import React, { useState,useEffect } from 'react'\nimport { getPlanetsByMovie } from '../../selectors/getPlanetsByMovie';\nimport { MovieItem } from './MovieItem';\nexport const MovieList = ({idMovie}) => {\n    const [planets,setPlanets] = useState(null);\n    useEffect(() => {\n        const getPlanets = async() => {\n            const resp = await getPlanetsByMovie(idMovie);\n            setPlanets(resp);\n        }\n        getPlanets();\n    }, [idMovie])\n    return (\n        \n        <div className=\"grupo\">\n            {(planets) ? planets.map(planet => <MovieItem key={planet.name} planet={planet}/>):<div className=\"spinner-border m-5\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n            </div>}\n        </div>\n    )\n}\n","import React from 'react'\nimport { MovieList } from './MovieList';\nexport const NewHopeScreen = () => {\n    \n    return (\n        <div>\n            <h1 style={{marginLeft:35}}>Star Wars: Episode IV – A New Hope</h1>\n            <hr/>\n            <MovieList idMovie=\"1\"></MovieList> \n        </div>\n            \n    )\n}\n","import React from 'react';\nimport { MovieList } from './MovieList';\n\nexport const EmpireStrikesScreen = () => {\n    return (\n        <div>\n            <h1 style={{marginLeft:35}}>Star Wars: Episode V – The Empire Strikes Back</h1>\n            <hr/>\n            <MovieList idMovie=\"2\"></MovieList> \n        </div>\n            \n    )\n}\n","import React from 'react'\nimport { MovieList } from './MovieList'\n\nexport const ReturnJediScreen = () => {\n    return (\n        <div>\n            <h1 style={{marginLeft:35}}>Star Wars: Episode VI – Return of the Jedi</h1>\n            <hr/>\n            <MovieList idMovie=\"3\"></MovieList> \n        </div>\n            \n    )\n}\n","\nexport const getPlanetByName = async(name) => {\n    const resp = await fetch(`https://swapi.dev/api/planets/?search=${name}`);\n    const planet = await resp.json();\n    let next = planet.next;\n    while(next){\n        const respNext = await fetch(next);\n        const planetNext = await respNext.json();\n        planet.results = [...planet.results,...planetNext.results]\n        next = planetNext.next;\n    }\n    \n    return planet;\n}\n","import React, { useEffect,useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPlanetByName } from '../../selectors/getPlanetByName';\n\nexport const PlanetScreen = ({history}) => {\n    const {planetName} = useParams();\n    //localStorage.setItem('lastpath', `/movie/${movieId}`);\n    const [planet,setPlanet] = useState(null);\n    useEffect(() => {\n        const getPlanet = async() => {\n            const resp = await getPlanetByName(planetName);\n            console.log(resp.results[0]);\n            setPlanet(resp.results[0]);\n        }\n        getPlanet();\n    }, [planetName])\n   \n    const handleClick = () => {\n        if(history.length<=2){\n            history.push('/');\n        }\n        else{\n            history.goBack();\n        }\n    };\n    return (\n      <div>\n            {(planet) ? <div className=\"vista-individual\">\n        <div className=\"card mb-3 carta animate__animated animate__fadeInLeft\" style={{maxWidth: 400}}>\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n          <img src={`../../assets/planets/${(planet.name).replace(/ /g,\"-\")}.png`} onError={(e)=>{e.target.onerror = null; e.target.src=\"/assets/planets/planetx.png\"}} className=\"card-img-top\" alt={planet.name}/>\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n            <h5 className=\"card-title\">{planet.name}</h5>\n            <p className=\"card-text\"> <strong>Climate: </strong>{planet.climate}</p>\n          <p className=\"card-text\"> <strong>Diameter: </strong>{planet.diameter}</p>\n          <p className=\"card-text\"> <strong>Gravity: </strong>{planet.gravity}</p>\n          <p className=\"card-text\"> <strong>Orbital period: </strong>{planet.orbital_period}</p>\n          <p className=\"card-text\"> <strong>Population </strong>{planet.population}</p>\n          <p className=\"card-text\"> <strong>Rotation period: </strong>{planet.rotation_period}</p>\n          <p className=\"card-text\"> <strong>Surface water: </strong>{planet.surface_water}</p>\n          <p className=\"card-text\"> <strong>Terrain: </strong>{planet.terrain}</p>\n          <button className=\"btn btn-outline-info\" onClick={handleClick}>Return</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>:<div className=\"d-flex justify-content-center m-5\">\n  <div className=\"spinner-border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n  </div>\n</div>}\n      </div>\n    )        \n    \n}\n","import React from 'react';\nimport { MovieList } from './MovieList';\n\nexport const PhantomMenaceScreen = () => {\n    return (\n        <div>\n            <h1 style={{marginLeft:35}}>Star Wars: Episode I – The Phantom Menace</h1>\n            <hr/>\n            <MovieList idMovie=\"4\"></MovieList> \n        </div>\n            \n    )\n}\n","import React from 'react';\nimport { MovieList } from './MovieList';\n\nexport const AttackClonesScreen = () => {\n    return (\n        <div>\n            <h1 style={{marginLeft:35}}>Star Wars: Episode II – Attack of the Clones</h1>\n            <hr/>\n            <MovieList idMovie=\"5\"></MovieList> \n        </div>\n            \n    )\n}\n","import React from 'react'\nimport { MovieList } from './MovieList'\n\nexport const RevengeSith = () => {\n    return (\n        <div>\n            <h1 style={{marginLeft:35}}>Star Wars: Episode III – Revenge of the Sith</h1>\n            <hr/>\n            <MovieList idMovie=\"6\"></MovieList> \n        </div>\n            \n    )\n}\n","import React, {useEffect,useState } from 'react'\nimport '../../index.css';\nimport { useForm } from '../../hooks/useForm';\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { MovieItem } from './MovieItem';\nimport { getPlanetByName } from '../../selectors/getPlanetByName';\n\n\nexport const PlanetSearch = ({history}) => {\n    const location = useLocation();\n    const {q=''} = queryString.parse(location.search);\n    const [ values, handleInputChange] = useForm({\n        textoBusqueda:q,\n    });\n    const [planets,setPlanet] = useState(null);\n    useEffect(() => {\n        const getPlanet = async() => {\n            if(q===''){\n                setPlanet([]);\n            }\n            else {\n                const resp = await getPlanetByName(q);\n                setPlanet(resp.results);\n            }\n        }\n        getPlanet();\n    }, [q])\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setPlanet(null);\n        history.push(`?q=${values.textoBusqueda}`);\n        //localStorage.setItem('lastpath', `/search?q=${values.textoBusqueda}`);\n    }\n    //console.log()\n    return (\n        <>\n            <h1 style={{marginLeft:35}}>Search</h1>\n            <hr style={{marginLeft:35}}/>\n            <div className=\"search-screen-container\">\n                <div className=\".search-screen-container-element1\">\n                <h3>Search for a Planet:</h3>\n                <hr/>\n                <form onSubmit={handleSearch}>\n                <input name=\"textoBusqueda\" type=\"text\" className=\"form-control\" placeholder=\"...\" onChange={handleInputChange} value={values.textoBusqueda} autoComplete='off'/>\n                <button className=\"btn btn-outline-info nuevo\">Search...</button>\n                </form>\n                </div>\n                <div className=\".search-screen-container-element1\">\n                <h3>Results</h3>\n                <hr/>\n                {\n                   (planets) ? planets.map( (elemento) =>  <MovieItem key={elemento.name} planet={elemento}/>):<div className=\"spinner-border m-5\" role=\"status\">\n                   <span className=\"sr-only\">Loading...</span>\n                 </div>\n                }\n                    \n                </div>\n            </div>\n        </>\n    )\n}\n","import { useState } from \"react\";\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React from 'react'\nimport { Switch, Redirect, Route} from 'react-router-dom'\nimport { Navbar } from '../Components/ui/NavBar'\nimport { NewHopeScreen } from '../Components/movieScreens/NewHopeScreen'\nimport { EmpireStrikesScreen } from '../Components/movieScreens/EmpireStrikesScreen'\nimport { ReturnJediScreen } from '../Components/movieScreens/ReturnJediScreen'\nimport { PlanetScreen } from '../Components/movieScreens/PlanetScreen'\nimport { PhantomMenaceScreen } from '../Components/movieScreens/PhantomMenaceScreen'\nimport { AttackClonesScreen } from '../Components/movieScreens/AttackClonesScreen'\nimport { RevengeSith } from '../Components/movieScreens/RevengeSith'\nimport { PlanetSearch } from '../Components/movieScreens/PlanetSearch'\n//import { MovieScreen } from '../Components/movieScreens/MovieScreen'\nexport const DashboardRouter = () => {\n    //const lastpath = localStorage.getItem('lastpath');\n    const publico = process.env.PUBLIC_URL;\n    return (\n        <>\n            <Navbar/>\n            <div>\n                <Switch>\n                    <Route exact path={publico + '/movie1'} component={NewHopeScreen}/>\n                    <Route exact path={publico + '/movie2'} component={EmpireStrikesScreen}/>\n                    <Route exact path={publico + '/movie3'} component={ReturnJediScreen}/>\n                    <Route exact path={publico + '/movie4'} component={PhantomMenaceScreen}/>\n                    <Route exact path={publico + '/movie5'} component={AttackClonesScreen}/>\n                    <Route exact path={publico + '/movie6'} component={RevengeSith}/>\n                    <Route exact path={publico + \"/planet/:planetName\"} component={PlanetScreen}/>\n                    <Route exact path={publico + \"/search\"} component={PlanetSearch}/>\n                    <Redirect to={publico + '/movie1'}/>\n                </Switch>\n            </div>   \n        </>\n    )\n}\n","import React from 'react'\nimport {\n    HashRouter,\n    Switch,\n    Route,\n  } from \"react-router-dom\";\nimport { DashboardRouter } from './DashboardRouter';\nexport const AppRouter = () => {\n  //const lastpath = localStorage.getItem('lastpath')\n  console.log(process.env.PUBLIC_URL);\n    return (\n        <HashRouter>\n          <div>\n            <Switch>\n            <Route path={process.env.PUBLIC_URL + '/'} component={DashboardRouter}/>\n            </Switch>\n          </div>\n        </HashRouter>\n      );\n}\n","import React from 'react';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const SWApp = () => {\n    \n    return (\n            <AppRouter/>  \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { SWApp } from './SWApp';\n\nReactDOM.render(<SWApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}